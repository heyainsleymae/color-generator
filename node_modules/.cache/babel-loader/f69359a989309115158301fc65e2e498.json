{"ast":null,"code":"var _jsxFileName = \"/Users/john/Documents/GitHub/color-generator/src/ColorGenerator.js\";\nimport React, { PureComponent } from 'react';\nimport './styles.css';\nimport { Color } from './components/Color';\nimport { disableBodyScroll } from 'body-scroll-lock';\nimport $ from 'jquery';\n\nclass ColorGenerator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: [],\n      isVisible: true,\n      generateGrayscale: false,\n      showHexColor: true\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n    this.colorRollback = this.colorRollback.bind(this);\n    this.generateColor = this.generateColor.bind(this);\n    this.toggleColorPanel = this.toggleColorPanel.bind(this);\n    this.toggleGrayscale = this.toggleGrayscale.bind(this);\n    this.toggleColorType = this.toggleColorType.bind(this);\n  }\n\n  anotherColor(clickedObject) {\n    if (clickedObject.target.id === \"color-generator\" || clickedObject.target.id === \"howto-text\") {\n      $(\"#howto-text\").remove();\n      $(\"#history-text\").remove();\n      var colorHex = this.generateColor();\n      this.setState({\n        colors: this.state.colors.concat({\n          hex: colorHex,\n          rgb: \"RGB Value\"\n        }) // end concat()\n\n      }); //end setState\n    } // end if\n\n  } // end anotherColor\n\n\n  generateColor() {\n    if (this.state.generateGrayscale) {\n      var generatedColor = Math.floor(Math.random() * 16).toString(16).toUpperCase();\n      generatedColor = generatedColor + Math.floor(Math.random() * 16).toString(16).toUpperCase();\n      generatedColor = generatedColor.repeat(3);\n      return \"#\" + generatedColor;\n    } else {\n      var generatedColor = Math.floor(Math.random() * 16777215).toString(16).toUpperCase();\n\n      while (generatedColor.length < 6) {\n        generatedColor = Math.floor(Math.random() * 16777215).toString(16).toUpperCase();\n      }\n      /* alert(this.hexToRgb(\"#\" + generatedColor).r + \"\\n\" +\n            this.hexToRgb(\"#\" + generatedColor).g + \"\\n\" +\n            this.hexToRgb(\"#\" + generatedColor).b); */\n\n\n      return \"#\" + generatedColor;\n    }\n  }\n  /* Tim Down: https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n\n\n  hexToRgb(hex) {\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n      return r + r + g + g + b + b;\n    });\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  }\n\n  componentDidMount() {\n    disableBodyScroll(document.body);\n    /* Register the Space (32) key as a click */\n\n    $(window).keyup(function (event) {\n      if (event.keyCode === 32) {\n        $(\"#color-generator\").click();\n      } // end if\n\n    }); // end $(tabs).keyup\n  }\n\n  componentDidUpdate() {\n    var colorPanel = document.getElementById(\"color-list\");\n    colorPanel.scrollTo(0, colorPanel.scrollHeight);\n  }\n\n  colorRollback(clickedObject) {\n    var bgRollbackColor = $(clickedObject.target).css(\"backgroundColor\");\n    $('#color-generator').css(\"background-color\", bgRollbackColor);\n  }\n\n  toggleGrayscale() {\n    if (this.state.generateGrayscale) {\n      this.setState({\n        generateGrayscale: false\n      });\n      $('#grayscale').css(\"color\", \"#FFFFFF\");\n    } else {\n      this.setState({\n        generateGrayscale: true\n      });\n      $('#grayscale').css(\"color\", \"#000000\");\n    }\n  }\n\n  toggleColorType() {\n    if (this.state.showHexColor) $('#color-type').html(\"HEX\");\n  }\n\n  toggleColorPanel() {\n    var heightToMove = $('#history-container').css(\"height\");\n    var controlsHeight = $('#buttons').css(\"height\");\n    controlsHeight = parseInt(controlsHeight.substring(0, heightToMove.length - 2), 10);\n    heightToMove = parseInt(heightToMove.substring(0, heightToMove.length - 2), 10);\n    heightToMove = heightToMove - controlsHeight + 2;\n\n    if (this.state.isVisible) {\n      $(\"#history-container\").animate({\n        bottom: \"-\" + heightToMove\n      }, 1000);\n      $('#color-list').addClass(\"no-box-shadow\");\n      $('#history-arrow').html(\"&and;\");\n      this.setState({\n        isVisible: false\n      });\n    } else {\n      $(\"#history-container\").animate({\n        bottom: \"0\"\n      }, 1000);\n      $('#color-list').removeClass(\"no-box-shadow\");\n      $('#history-arrow').html(\"&or;\");\n      this.setState({\n        isVisible: true\n      });\n    }\n  }\n\n  render() {\n    if (this.state.colors.length > 0) {\n      var bgColor = this.state.colors[this.state.colors.length - 1].hex;\n    }\n\n    const colorList = this.state.colors.map((color, index) => /*#__PURE__*/React.createElement(Color, {\n      key: index,\n      hex: color.hex,\n      function: this.colorRollback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"color-generator\",\n      style: {\n        backgroundColor: bgColor\n      },\n      onClick: this.anotherColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"howto-text\",\n      onClick: this.anotherColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, \"Click, Tap, or Press \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 75\n      }\n    }, \"space\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"history-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"history-arrow\",\n      onClick: this.toggleColorPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \"\\u2228\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"grayscale\",\n      onClick: this.toggleGrayscale,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"\\u2600\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"color-type\",\n      onClick: this.toggleColorType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, \"RGB\")), \"  \", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"color-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"history-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"Your color history will appear here.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, \"Click on a color to return to it.\")), colorList), \" \"), \" \");\n  }\n\n}\n\nexport { ColorGenerator };","map":{"version":3,"sources":["/Users/john/Documents/GitHub/color-generator/src/ColorGenerator.js"],"names":["React","PureComponent","Color","disableBodyScroll","$","ColorGenerator","constructor","props","state","colors","isVisible","generateGrayscale","showHexColor","anotherColor","bind","colorRollback","generateColor","toggleColorPanel","toggleGrayscale","toggleColorType","clickedObject","target","id","remove","colorHex","setState","concat","hex","rgb","generatedColor","Math","floor","random","toString","toUpperCase","repeat","length","hexToRgb","shorthandRegex","replace","m","r","g","b","result","exec","parseInt","componentDidMount","document","body","window","keyup","event","keyCode","click","componentDidUpdate","colorPanel","getElementById","scrollTo","scrollHeight","bgRollbackColor","css","html","heightToMove","controlsHeight","substring","animate","bottom","addClass","removeClass","render","bgColor","colorList","map","color","index","backgroundColor"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport './styles.css';\nimport { Color } from './components/Color'\nimport { disableBodyScroll } from 'body-scroll-lock';\nimport $ from 'jquery';\n\nclass ColorGenerator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: [],\n      isVisible: true,\n      generateGrayscale: false,\n      showHexColor: true\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n    this.colorRollback = this.colorRollback.bind(this);\n    this.generateColor = this.generateColor.bind(this);\n    this.toggleColorPanel = this.toggleColorPanel.bind(this);\n    this.toggleGrayscale = this.toggleGrayscale.bind(this);\n    this.toggleColorType = this.toggleColorType.bind(this);\n  }\n\n  anotherColor(clickedObject) {\n    if (clickedObject.target.id === \"color-generator\"\n    || clickedObject.target.id === \"howto-text\") {\n      $(\"#howto-text\").remove();\n      $(\"#history-text\").remove();\n      var colorHex = this.generateColor();\n      this.setState({\n        colors: this.state.colors.concat(\n              {\n                hex:colorHex,\n                rgb: \"RGB Value\"\n              }) // end concat()\n            }); //end setState\n        } // end if\n    } // end anotherColor\n\n    generateColor() {\n      if (this.state.generateGrayscale) {\n        var generatedColor = Math.floor(Math.random()*16).toString(16).toUpperCase();\n        generatedColor = generatedColor + Math.floor(Math.random()*16).toString(16).toUpperCase();\n        generatedColor = generatedColor.repeat(3);\n        return \"#\" + generatedColor;\n      } else {\n      var generatedColor = Math.floor(Math.random()*16777215).toString(16).toUpperCase();\n      while (generatedColor.length < 6) {\n        generatedColor = Math.floor(Math.random()*16777215).toString(16).toUpperCase();\n      }\n      /* alert(this.hexToRgb(\"#\" + generatedColor).r + \"\\n\" +\n            this.hexToRgb(\"#\" + generatedColor).g + \"\\n\" +\n            this.hexToRgb(\"#\" + generatedColor).b); */\n      return \"#\" + generatedColor;\n    }\n    }\n\n/* Tim Down: https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n\n    hexToRgb(hex) {\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n      return r + r + g + g + b + b;\n    });\n\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  }\n\ncomponentDidMount() {\n  disableBodyScroll(document.body);\n  /* Register the Space (32) key as a click */\n      $(window).keyup(function(event) {\n          if (event.keyCode === 32) {\n              $(\"#color-generator\").click();\n          } // end if\n      }); // end $(tabs).keyup\n}\n\n  componentDidUpdate() {\n    var colorPanel = document.getElementById(\"color-list\");\n    colorPanel.scrollTo(0,colorPanel.scrollHeight);\n  }\n\n  colorRollback(clickedObject) {\n    var bgRollbackColor = $(clickedObject.target).css(\"backgroundColor\");\n    $('#color-generator').css(\"background-color\", bgRollbackColor);\n  }\n\n  toggleGrayscale() {\n    if (this.state.generateGrayscale) {\n      this.setState({ generateGrayscale: false });\n      $('#grayscale').css(\"color\",\"#FFFFFF\");\n    } else {\n      this.setState({ generateGrayscale: true });\n      $('#grayscale').css(\"color\",\"#000000\");\n    }\n  }\n\ntoggleColorType() {\n  if (this.state.showHexColor)\n\n  $('#color-type').html(\"HEX\");\n}\n\n  toggleColorPanel() {\n    var heightToMove = $('#history-container').css(\"height\");\n    var controlsHeight = $('#buttons').css(\"height\");\n    controlsHeight =  parseInt(controlsHeight.substring(0,heightToMove.length-2),10);\n    heightToMove = parseInt(heightToMove.substring(0,heightToMove.length-2),10);\n    heightToMove = heightToMove - controlsHeight + 2;\n\n    if (this.state.isVisible) {\n      $( \"#history-container\" ).animate({ bottom: \"-\" + heightToMove }, 1000);\n      $('#color-list').addClass(\"no-box-shadow\");\n      $('#history-arrow').html(\"&and;\");\n      this.setState({ isVisible: false });\n    } else {\n      $( \"#history-container\" ).animate({ bottom:\"0\" }, 1000);\n      $('#color-list').removeClass(\"no-box-shadow\");\n      $('#history-arrow').html(\"&or;\");\n      this.setState({ isVisible: true });\n    }\n  }\n\n  render() {\n    if(this.state.colors.length > 0) {\n      var bgColor = this.state.colors[this.state.colors.length - 1].hex;\n  }\n    const colorList = this.state.colors.map( (color, index) =>\n    <Color key={index} hex={color.hex} function={this.colorRollback}/>)\n    return (\n    <div id=\"color-generator\" style={{backgroundColor:bgColor}} onClick={this.anotherColor}>\n      <p id=\"howto-text\" onClick={this.anotherColor}>Click, Tap, or Press <code>space</code></p>\n      <div id=\"history-container\">\n        <div id=\"buttons\">\n        <p id=\"history-arrow\" onClick={this.toggleColorPanel}>&or;</p>\n        <p id=\"grayscale\" onClick={this.toggleGrayscale}>&#9728;</p>\n        <p id=\"color-type\" onClick={this.toggleColorType}>RGB</p>\n        </div>  { /* end buttons */ }\n      <div id=\"color-list\">\n        <div id=\"history-text\">\n          <p>Your color history will appear here.</p>\n          <p>Click on a color to return to it.</p>\n        </div>\n        {colorList}\n        </div> { /* end color-list */ }\n        </div> { /* end color-container && end color-generator on line below */ }\n    </div>\n  )\n}\n}\n\nexport { ColorGenerator };\n"]},"metadata":{},"sourceType":"module"}