{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/Code/React/colors/src/ColorGenerator.js\";\nimport React, { PureComponent } from 'react';\nimport './App.css';\nimport { Color } from './components/Color';\nimport { disableBodyScroll } from 'body-scroll-lock';\nimport $ from 'jquery';\n\nclass ColorGenerator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: [],\n      isVisible: true\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n    this.colorRollback = this.colorRollback.bind(this);\n    this.generateHex = this.generateHex.bind(this);\n    this.toggleColorPanel = this.toggleColorPanel.bind(this);\n  }\n\n  anotherColor(clickedObject) {\n    $(\"#howto-text\").remove();\n    $(\"#history-text\").remove();\n\n    if (clickedObject.target.id === \"color-generator\") {\n      var colorHex = this.generateHex();\n      this.setState({\n        colors: this.state.colors.concat({\n          hex: colorHex\n        }) // end concat()\n\n      }); //end setState\n    } // end if\n\n  } // end anotherColor\n\n\n  generateHex() {\n    var generatedColor = Math.floor(Math.random() * 16777215).toString(16).toUpperCase();\n\n    while (generatedColor.length < 6) {\n      generatedColor = Math.floor(Math.random() * 16777215).toString(16).toUpperCase();\n    }\n\n    return \"#\" + generatedColor;\n  }\n\n  componentDidMount() {\n    disableBodyScroll(document.body);\n  }\n\n  componentDidUpdate() {\n    var colorPanel = document.getElementById(\"colors-panel\");\n    colorPanel.scrollTo(0, colorPanel.scrollHeight);\n  }\n\n  colorRollback(clickedObject) {\n    var bgRollbackColor = $(clickedObject.target).css(\"backgroundColor\");\n    $('#color-generator').css(\"background-color\", bgRollbackColor);\n  }\n\n  toggleColorPanel() {\n    if (this.state.isVisible) {\n      $('#colors-panel').css(\"visibility\", \"hidden\");\n      this.setState({\n        isVisible: false\n      });\n    } else {\n      $('#colors-panel').css(\"visibility\", \"visible\");\n      this.setState({\n        isVisible: true\n      });\n    }\n  }\n\n  render() {\n    if (this.state.colors.length > 0) {\n      var bgColor = this.state.colors[this.state.colors.length - 1].hex;\n    }\n\n    const colorList = this.state.colors.map((color, index) => /*#__PURE__*/React.createElement(Color, {\n      key: index,\n      hex: color.hex,\n      function: this.colorRollback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"color-generator\",\n      style: {\n        backgroundColor: bgColor\n      },\n      onClick: this.anotherColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"howto-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, \"Click anyhere on the screen to generate a new color.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"colors-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"history-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Your color history will appear here. Click on a color to return to it.\"), colorList), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.toggleColorPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, \"&caron;\\u2228v\"));\n  }\n\n}\n\nexport { ColorGenerator };","map":{"version":3,"sources":["/Users/john/Desktop/Code/React/colors/src/ColorGenerator.js"],"names":["React","PureComponent","Color","disableBodyScroll","$","ColorGenerator","constructor","props","state","colors","isVisible","anotherColor","bind","colorRollback","generateHex","toggleColorPanel","clickedObject","remove","target","id","colorHex","setState","concat","hex","generatedColor","Math","floor","random","toString","toUpperCase","length","componentDidMount","document","body","componentDidUpdate","colorPanel","getElementById","scrollTo","scrollHeight","bgRollbackColor","css","render","bgColor","colorList","map","color","index","backgroundColor"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport './App.css';\nimport { Color } from './components/Color'\nimport { disableBodyScroll } from 'body-scroll-lock';\nimport $ from 'jquery';\n\nclass ColorGenerator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: [],\n      isVisible: true\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n    this.colorRollback = this.colorRollback.bind(this);\n    this.generateHex = this.generateHex.bind(this);\n    this.toggleColorPanel = this.toggleColorPanel.bind(this);\n  }\n\n  anotherColor(clickedObject) {\n    $(\"#howto-text\").remove();\n    $(\"#history-text\").remove();\n    if (clickedObject.target.id === \"color-generator\") {\n    var colorHex = this.generateHex();\n    this.setState({\n      colors: this.state.colors.concat(\n            {\n              hex:colorHex\n            }) // end concat()\n          }); //end setState\n        } // end if\n    } // end anotherColor\n\n    generateHex() {\n      var generatedColor = Math.floor(Math.random()*16777215).toString(16).toUpperCase();\n      while (generatedColor.length < 6) {\n        generatedColor = Math.floor(Math.random()*16777215).toString(16).toUpperCase();\n      }\n      return \"#\" + generatedColor;\n    }\n\ncomponentDidMount() { disableBodyScroll(document.body); }\n\n  componentDidUpdate() {\n    var colorPanel = document.getElementById(\"colors-panel\");\n    colorPanel.scrollTo(0,colorPanel.scrollHeight);\n  }\n\n  colorRollback(clickedObject) {\n    var bgRollbackColor = $(clickedObject.target).css(\"backgroundColor\");\n    $('#color-generator').css(\"background-color\", bgRollbackColor)\n  }\n\n  toggleColorPanel() {\n    if (this.state.isVisible) {\n      $('#colors-panel').css(\"visibility\",\"hidden\");\n      this.setState({ isVisible: false });\n    } else {\n      $('#colors-panel').css(\"visibility\",\"visible\");\n      this.setState({ isVisible: true });\n    }\n  }\n\n  render() {\n    if(this.state.colors.length > 0) {\n      var bgColor = this.state.colors[this.state.colors.length - 1].hex;\n  }\n    const colorList = this.state.colors.map( (color, index) =>\n    <Color key={index} hex={color.hex} function={this.colorRollback}/>)\n    return(\n    <div id=\"color-generator\" style={{backgroundColor:bgColor}} onClick={this.anotherColor}>\n      <p id=\"howto-text\">Click anyhere on the screen to generate a new color.</p>\n      <div id=\"colors-panel\">\n        <p id=\"history-text\">Your color history will appear here. Click on a color to return to it.</p>\n        {colorList}\n      </div>\n      <span onClick={this.toggleColorPanel}>&caron;&or;v</span>\n    </div>\n\n  )\n}\n}\n\nexport { ColorGenerator };\n"]},"metadata":{},"sourceType":"module"}