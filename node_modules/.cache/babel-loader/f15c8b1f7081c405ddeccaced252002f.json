{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/Code/React/colors/src/ColorGenerator.js\";\nimport React, { PureComponent } from 'react';\nimport './App.css';\nimport { Color } from './components/Color';\nimport { disableBodyScroll } from 'body-scroll-lock';\nimport $ from 'jquery';\n\nclass ColorGenerator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: []\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n    this.colorRollback = this.colorRollback.bind(this);\n    this.generateHex = this.generateHex.bind(this);\n  }\n\n  anotherColor() {\n    $(\"#howto-text\").remove();\n    $(\"#history-text\").remove();\n    var colorHex = this.generateHex(this);\n    this.setState({\n      colors: this.state.colors.concat({\n        hex: colorHex\n      }) // end concat()\n\n    }); //end setState\n  }\n\n  generateHex(element) {\n    var generatedColor = Math.floor(Math.random() * 16777215).toString(16).toUpperCase();\n    console.log($(element).attr('id'));\n\n    while (generatedColor.length < 6) {\n      generatedColor = Math.floor(Math.random() * 16777215).toString(16).toUpperCase();\n    }\n\n    return \"#\" + generatedColor;\n  }\n\n  componentDidMount() {\n    disableBodyScroll(document.body);\n  }\n\n  colorRollback() {\n    alert(\"Color Rollback Test\");\n  }\n\n  render() {\n    if (this.state.colors.length > 0) {\n      var clr = this.state.colors[this.state.colors.length - 1].hex;\n    }\n\n    const colorList = this.state.colors.map((color, index) => /*#__PURE__*/React.createElement(Color, {\n      key: index,\n      hex: color.hex,\n      function: this.colorRollback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"color-generator-app\",\n      style: {\n        backgroundColor: clr\n      },\n      onClick: this.anotherColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"howto-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, \"Click anyhere on the screen to generate a new color.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"colors-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"history-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Your color history will appear here. Click on a color to return to it.\"), colorList));\n  }\n\n}\n\nexport { ColorGenerator };","map":{"version":3,"sources":["/Users/john/Desktop/Code/React/colors/src/ColorGenerator.js"],"names":["React","PureComponent","Color","disableBodyScroll","$","ColorGenerator","constructor","props","state","colors","anotherColor","bind","colorRollback","generateHex","remove","colorHex","setState","concat","hex","element","generatedColor","Math","floor","random","toString","toUpperCase","console","log","attr","length","componentDidMount","document","body","alert","render","clr","colorList","map","color","index","backgroundColor"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport './App.css';\nimport { Color } from './components/Color'\nimport { disableBodyScroll } from 'body-scroll-lock';\nimport $ from 'jquery';\n\nclass ColorGenerator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: []\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n    this.colorRollback = this.colorRollback.bind(this);\n    this.generateHex = this.generateHex.bind(this);\n  }\n\n  anotherColor() {\n    $(\"#howto-text\").remove();\n    $(\"#history-text\").remove();\n    var colorHex = this.generateHex(this);\n    this.setState({\n      colors: this.state.colors.concat(\n            {\n              hex:colorHex\n            }) // end concat()\n          }); //end setState\n    }\n\n    generateHex(element) {\n      var generatedColor = Math.floor(Math.random()*16777215).toString(16).toUpperCase();\n      console.log($(element).attr('id'));\n      while (generatedColor.length < 6) {\n        generatedColor = Math.floor(Math.random()*16777215).toString(16).toUpperCase();\n      }\n      return \"#\" + generatedColor;\n    }\n\ncomponentDidMount() {\n  disableBodyScroll(document.body);\n  }\n\n  colorRollback() {\n    alert(\"Color Rollback Test\");\n  }\n\n  render() {\n    if(this.state.colors.length > 0) {\n      var clr = this.state.colors[this.state.colors.length - 1].hex;\n  }\n    const colorList = this.state.colors.map( (color, index) =>\n    <Color key={index} hex={color.hex} function={this.colorRollback}/>)\n    return(\n    <div id=\"color-generator-app\" style={{backgroundColor:clr}} onClick={this.anotherColor}>\n      <p id=\"howto-text\">Click anyhere on the screen to generate a new color.</p>\n      <div id=\"colors-panel\">\n        <p id=\"history-text\">Your color history will appear here. Click on a color to return to it.</p>\n        {colorList}\n      </div>\n    </div>\n\n  )\n}\n}\n\nexport { ColorGenerator };\n"]},"metadata":{},"sourceType":"module"}