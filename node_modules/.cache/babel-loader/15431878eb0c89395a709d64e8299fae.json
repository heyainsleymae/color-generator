{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/Code/React/colors/src/ColorGenerator.js\";\nimport React, { PureComponent } from 'react';\nimport './App.css';\nimport { ColorList } from './components/ColorList';\nimport { Color } from './components/Color';\nimport { disableBodyScroll } from 'body-scroll-lock';\n\nclass ColorGenerator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: []\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n  }\n\n  anotherColor() {\n    var colorHex = this.generateHex();\n    this.setState({\n      colors: this.state.colors.concat({\n        hex: colorHex\n      }) // end concat()\n\n    }); //end setState\n\n    console.log(this.state);\n  }\n\n  generateHex() {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16).toUpperCase();\n  }\n\n  componentDidMount() {\n    disableBodyScroll(document.body);\n  }\n\n  render() {\n    const colorList = this.state.colors.map((color, index) => /*#__PURE__*/React.createElement(Color, {\n      key: index,\n      hex: color.hex,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"color-generator-app\",\n      style: {\n        backgroundColor: this.state.colors[colors.length - 1].hex\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colors-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, colorList), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.anotherColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, \"New Color\"));\n  }\n\n}\n\nexport { ColorGenerator };","map":{"version":3,"sources":["/Users/john/Desktop/Code/React/colors/src/ColorGenerator.js"],"names":["React","PureComponent","ColorList","Color","disableBodyScroll","ColorGenerator","constructor","props","state","colors","anotherColor","bind","colorHex","generateHex","setState","concat","hex","console","log","Math","floor","random","toString","toUpperCase","componentDidMount","document","body","render","colorList","map","color","index","backgroundColor","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,MAAMC,cAAN,SAA6BJ,aAA7B,CAA2C;AACzCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACb,QAAIE,QAAQ,GAAG,KAAKC,WAAL,EAAf;AACA,SAAKC,QAAL,CAAc;AACZL,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,CAAkBM,MAAlB,CACF;AACEC,QAAAA,GAAG,EAACJ;AADN,OADE,CADI,CAIH;;AAJG,KAAd,EAFa,CAOH;;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACD;;AAEDK,EAAAA,WAAW,GAAG;AACZ,WAAO,MAAMM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C,EAAgDC,WAAhD,EAAb;AACD;;AAELC,EAAAA,iBAAiB,GAAG;AAClBpB,IAAAA,iBAAiB,CAACqB,QAAQ,CAACC,IAAV,CAAjB;AACC;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKpB,KAAL,CAAWC,MAAX,CAAkBoB,GAAlB,CAAuB,CAACC,KAAD,EAAQC,KAAR,kBACzC,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAZ;AAAmB,MAAA,GAAG,EAAED,KAAK,CAACd,GAA9B;AAAmC,MAAA,KAAK,EAAEe,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB,CAAlB;AAEA,wBACA;AAAK,MAAA,EAAE,EAAC,qBAAR;AAA8B,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC,KAAKxB,KAAL,CAAWC,MAAX,CAAkBA,MAAM,CAACwB,MAAP,GAAc,CAAhC,EAAmCjB;AAApD,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,SADH,CADF,eAIE;AAAQ,MAAA,OAAO,EAAE,KAAKlB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADA;AASH;;AAxC0C;;AA2C3C,SAASL,cAAT","sourcesContent":["import React, { PureComponent } from 'react';\nimport './App.css';\nimport { ColorList } from './components/ColorList'\nimport { Color } from './components/Color'\nimport { disableBodyScroll } from 'body-scroll-lock';\n\nclass ColorGenerator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: []\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n  }\n\n  anotherColor() {\n    var colorHex = this.generateHex();\n    this.setState({\n      colors: this.state.colors.concat(\n            {\n              hex:colorHex\n            }) // end concat()\n          }); //end setState\n      console.log(this.state);\n    }\n\n    generateHex() {\n      return \"#\" + Math.floor(Math.random()*16777215).toString(16).toUpperCase();\n    }\n\ncomponentDidMount() {\n  disableBodyScroll(document.body);\n  }\n\n  render() {\n    const colorList = this.state.colors.map( (color, index) =>\n    <Color key={index} hex={color.hex} index={index}/>)\n    return(\n    <div id=\"color-generator-app\" style={{backgroundColor:this.state.colors[colors.length-1].hex}}>\n      <div className=\"colors-panel\">\n        {colorList}\n      </div>\n      <button onClick={this.anotherColor}>New Color</button>\n    </div>\n\n  )\n}\n}\n\nexport { ColorGenerator };\n"]},"metadata":{},"sourceType":"module"}