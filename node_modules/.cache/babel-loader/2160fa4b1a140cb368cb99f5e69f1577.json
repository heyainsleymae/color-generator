{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/Code/React/colors/src/components/ColorList.js\";\nimport React, { PureComponent } from 'react';\nimport { Color } from './Color';\n\nclass ColorList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfColors: 1,\n      colors: [{\n        id: 0,\n        hex: \"FFFFFF\"\n      }]\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n  }\n\n  anotherColor() {\n    this.increment();\n    console.log(this.state.numberOfColors);\n    this.setState({\n      colors: this.state.colors.concat({\n        id: this.state.numberOfColors,\n        name: \"Another Name\"\n      }) // end concat()\n\n    }); //end setState\n\n    console.log(this.state);\n  }\n\n  increment() {\n    this.setState({\n      numberOfColors: this.state.numberOfColors + 1\n    });\n  }\n\n  render() {\n    for (var i = 0; i < this.state.numberOfColors; i++) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"colors-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Color, {\n        key: this.state.numberOfColors,\n        function: this.anotherColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.anotherColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, \"New Color\"));\n    }\n  }\n\n}\n\nexport { ColorList };","map":{"version":3,"sources":["/Users/john/Desktop/Code/React/colors/src/components/ColorList.js"],"names":["React","PureComponent","Color","ColorList","constructor","props","state","numberOfColors","colors","id","hex","anotherColor","bind","increment","console","log","setState","concat","name","render","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAEA,MAAMC,SAAN,SAAwBF,aAAxB,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,CADL;AAEXC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,EAAE,EAAC,CADL;AAEEC,QAAAA,GAAG,EAAC;AAFN,OADM;AAFG,KAAb;AASA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACb,SAAKE,SAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,cAAvB;AACA,SAAKS,QAAL,CAAc;AACZR,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAAX,CAAkBS,MAAlB,CACF;AACER,QAAAA,EAAE,EAAC,KAAKH,KAAL,CAAWC,cADhB;AAEEW,QAAAA,IAAI,EAAC;AAFP,OADE,CADI,CAKH;;AALG,KAAd,EAHa,CASH;;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACD;;AAEDO,EAAAA,SAAS,GAAG;AACV,SAAKG,QAAL,CAAc;AAAET,MAAAA,cAAc,EAAE,KAAKD,KAAL,CAAWC,cAAX,GAA4B;AAA9C,KAAd;AACD;;AAEHY,EAAAA,MAAM,GAAG;AACP,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAAC,KAAKd,KAAL,CAAWC,cAA1B,EAAyCa,CAAC,EAA1C,EAA8C;AAE9C,0BACA,uDACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,KAAKd,KAAL,CAAWC,cAAvB;AAAuC,QAAA,QAAQ,EAAE,KAAKI,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAIE;AAAQ,QAAA,OAAO,EAAE,KAAKA,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADA;AASG;AACN;;AA7CqC;;AAgDtC,SAASR,SAAT","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Color } from './Color'\n\nclass ColorList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfColors: 1,\n      colors: [\n        {\n          id:0,\n          hex:\"FFFFFF\"\n        }\n      ]\n    };\n    this.anotherColor = this.anotherColor.bind(this);\n  }\n\n  anotherColor() {\n    this.increment();\n    console.log(this.state.numberOfColors);\n    this.setState({\n      colors: this.state.colors.concat(\n            {\n              id:this.state.numberOfColors,\n              name:\"Another Name\"\n            }) // end concat()\n          }); //end setState\n      console.log(this.state);\n    }\n\n    increment() {\n      this.setState({ numberOfColors: this.state.numberOfColors + 1 });\n    }\n\n  render() {\n    for(var i =0;i<this.state.numberOfColors;i++) {\n\n    return(\n    <>\n      <div className=\"colors-panel\">\n        <Color key={this.state.numberOfColors} function={this.anotherColor}/>\n      </div>\n      <button onClick={this.anotherColor}>New Color</button>\n    </>\n\n  )\n      }\n}\n}\n\nexport { ColorList };\n"]},"metadata":{},"sourceType":"module"}