{"ast":null,"code":"import { TOGGLE_COLOR_TYPE, TOGGLE_HISTORY } from './colorTypes';\nimport $ from 'jquery';\nconst initialState = {\n  colors: [],\n  historyVisible: true,\n  generateGrayscale: false,\n  colorType: \"HEX\"\n};\nexport const colorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_COLOR_TYPE:\n      if (state.colorType == \"HEX\") {\n        return { ...state,\n          colorType: \"RGB\"\n        };\n      } else if (state.colorType == \"RGB\") {\n        return { ...state,\n          colorType: \"HEX\"\n        };\n      }\n\n    case TOGGLE_HISTORY:\n      var heightToMove = $('#history-container').css(\"height\");\n      var controlsHeight = $('#buttons').css(\"height\");\n      controlsHeight = parseInt(controlsHeight.substring(0, heightToMove.length - 2), 10);\n      heightToMove = parseInt(heightToMove.substring(0, heightToMove.length - 2), 10);\n      heightToMove = heightToMove - controlsHeight + 2;\n\n      if (state.historyVisible) {\n        $(\"#history-container\").animate({\n          bottom: \"-\" + heightToMove\n        }, 500);\n        $('#color-list').addClass(\"no-box-shadow\");\n        $('#history-arrow').html(\"&and;\");\n        $('#color-type').animate({\n          opacity: \"toggle\"\n        }, 500);\n        return { ...state,\n          historyVisible: false\n        };\n      } else {\n        $(\"#history-container\").animate({\n          bottom: \"0\"\n        }, 500);\n        $('#color-list').removeClass(\"no-box-shadow\");\n        $('#history-arrow').html(\"&or;\");\n        $('#color-type').animate({\n          opacity: \"toggle\"\n        }, 500);\n        return { ...state,\n          historyVisible: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/john/Documents/GitHub/color-generator/src/redux/color/colorReducer.js"],"names":["TOGGLE_COLOR_TYPE","TOGGLE_HISTORY","$","initialState","colors","historyVisible","generateGrayscale","colorType","colorReducer","state","action","type","heightToMove","css","controlsHeight","parseInt","substring","length","animate","bottom","addClass","html","opacity","removeClass"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,cAA5B,QAAkD,cAAlD;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,cAAc,EAAE,IAFG;AAGnBC,EAAAA,iBAAiB,EAAE,KAHA;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,iBAAL;AACA,UAAIS,KAAK,CAACF,SAAN,IAAmB,KAAvB,EAA8B;AAC5B,eAAO,EACL,GAAIE,KADC;AAELF,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID,OALD,MAKO,IAAIE,KAAK,CAACF,SAAN,IAAmB,KAAvB,EAA8B;AACnC,eAAO,EACL,GAAIE,KADC;AAELF,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID;;AAED,SAAKN,cAAL;AACA,UAAIW,YAAY,GAAGV,CAAC,CAAC,oBAAD,CAAD,CAAwBW,GAAxB,CAA4B,QAA5B,CAAnB;AACA,UAAIC,cAAc,GAAGZ,CAAC,CAAC,UAAD,CAAD,CAAcW,GAAd,CAAkB,QAAlB,CAArB;AACAC,MAAAA,cAAc,GAAIC,QAAQ,CAACD,cAAc,CAACE,SAAf,CAAyB,CAAzB,EAA2BJ,YAAY,CAACK,MAAb,GAAoB,CAA/C,CAAD,EAAmD,EAAnD,CAA1B;AACAL,MAAAA,YAAY,GAAGG,QAAQ,CAACH,YAAY,CAACI,SAAb,CAAuB,CAAvB,EAAyBJ,YAAY,CAACK,MAAb,GAAoB,CAA7C,CAAD,EAAiD,EAAjD,CAAvB;AACAL,MAAAA,YAAY,GAAGA,YAAY,GAAGE,cAAf,GAAgC,CAA/C;;AAEA,UAAIL,KAAK,CAACJ,cAAV,EAA0B;AACxBH,QAAAA,CAAC,CAAE,oBAAF,CAAD,CAA0BgB,OAA1B,CAAkC;AAAEC,UAAAA,MAAM,EAAE,MAAMP;AAAhB,SAAlC,EAAkE,GAAlE;AACAV,QAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBkB,QAAjB,CAA0B,eAA1B;AACAlB,QAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBmB,IAApB,CAAyB,OAAzB;AACAnB,QAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBgB,OAAjB,CAAyB;AAACI,UAAAA,OAAO,EAAC;AAAT,SAAzB,EAA6C,GAA7C;AACF,eAAO,EACL,GAAIb,KADC;AAELJ,UAAAA,cAAc,EAAE;AAFX,SAAP;AAID,OATC,MASK;AACLH,QAAAA,CAAC,CAAE,oBAAF,CAAD,CAA0BgB,OAA1B,CAAkC;AAAEC,UAAAA,MAAM,EAAC;AAAT,SAAlC,EAAkD,GAAlD;AACAjB,QAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBqB,WAAjB,CAA6B,eAA7B;AACArB,QAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBmB,IAApB,CAAyB,MAAzB;AACAnB,QAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBgB,OAAjB,CAAyB;AAACI,UAAAA,OAAO,EAAC;AAAT,SAAzB,EAA6C,GAA7C;AACA,eAAO,EACL,GAAIb,KADC;AAELJ,UAAAA,cAAc,EAAE;AAFX,SAAP;AAIC;;AAGD;AAAS,aAAOI,KAAP;AA1CX;AA4CD,CA7CM","sourcesContent":["import { TOGGLE_COLOR_TYPE, TOGGLE_HISTORY } from './colorTypes';\nimport $ from 'jquery';\n\nconst initialState = {\n  colors: [],\n  historyVisible: true,\n  generateGrayscale: false,\n  colorType: \"HEX\"\n}\n\nexport const colorReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case TOGGLE_COLOR_TYPE:\n    if (state.colorType == \"HEX\") {\n      return {\n        ... state,\n        colorType: \"RGB\"\n      }\n    } else if (state.colorType == \"RGB\") {\n      return {\n        ... state,\n        colorType: \"HEX\"\n      }\n    }\n\n    case TOGGLE_HISTORY:\n    var heightToMove = $('#history-container').css(\"height\");\n    var controlsHeight = $('#buttons').css(\"height\");\n    controlsHeight =  parseInt(controlsHeight.substring(0,heightToMove.length-2),10);\n    heightToMove = parseInt(heightToMove.substring(0,heightToMove.length-2),10);\n    heightToMove = heightToMove - controlsHeight + 2;\n\n    if (state.historyVisible) {\n      $( \"#history-container\" ).animate({ bottom: \"-\" + heightToMove }, 500);\n      $('#color-list').addClass(\"no-box-shadow\");\n      $('#history-arrow').html(\"&and;\");\n      $('#color-type').animate({opacity:\"toggle\"}, 500);\n    return {\n      ... state,\n      historyVisible: false\n    }\n  } else {\n    $( \"#history-container\" ).animate({ bottom:\"0\" }, 500);\n    $('#color-list').removeClass(\"no-box-shadow\");\n    $('#history-arrow').html(\"&or;\");\n    $('#color-type').animate({opacity:\"toggle\"}, 500);\n    return {\n      ... state,\n      historyVisible: true\n    }\n    }\n\n\n    default: return state\n  }\n};\n"]},"metadata":{},"sourceType":"module"}